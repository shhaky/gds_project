//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GdsHub.ServiceReferencePortal {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferencePortal.IPortal", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IPortal {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortal/checkIfExistedUserName", ReplyAction="http://tempuri.org/IPortal/checkIfExistedUserNameResponse")]
        bool checkIfExistedUserName(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortal/checkIfExistedUserName", ReplyAction="http://tempuri.org/IPortal/checkIfExistedUserNameResponse")]
        System.Threading.Tasks.Task<bool> checkIfExistedUserNameAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortal/addNewUser", ReplyAction="http://tempuri.org/IPortal/addNewUserResponse")]
        bool addNewUser(string userName, string passWord, string firstName, string lastName, string email, string joinDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortal/addNewUser", ReplyAction="http://tempuri.org/IPortal/addNewUserResponse")]
        System.Threading.Tasks.Task<bool> addNewUserAsync(string userName, string passWord, string firstName, string lastName, string email, string joinDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortal/checkPassword", ReplyAction="http://tempuri.org/IPortal/checkPasswordResponse")]
        bool checkPassword(string userName, string passWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortal/checkPassword", ReplyAction="http://tempuri.org/IPortal/checkPasswordResponse")]
        System.Threading.Tasks.Task<bool> checkPasswordAsync(string userName, string passWord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortal/getUserId", ReplyAction="http://tempuri.org/IPortal/getUserIdResponse")]
        long getUserId(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortal/getUserId", ReplyAction="http://tempuri.org/IPortal/getUserIdResponse")]
        System.Threading.Tasks.Task<long> getUserIdAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortal/getPassWord", ReplyAction="http://tempuri.org/IPortal/getPassWordResponse")]
        string getPassWord(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortal/getPassWord", ReplyAction="http://tempuri.org/IPortal/getPassWordResponse")]
        System.Threading.Tasks.Task<string> getPassWordAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortal/getFirstName", ReplyAction="http://tempuri.org/IPortal/getFirstNameResponse")]
        string getFirstName(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortal/getFirstName", ReplyAction="http://tempuri.org/IPortal/getFirstNameResponse")]
        System.Threading.Tasks.Task<string> getFirstNameAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortal/getLastName", ReplyAction="http://tempuri.org/IPortal/getLastNameResponse")]
        string getLastName(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortal/getLastName", ReplyAction="http://tempuri.org/IPortal/getLastNameResponse")]
        System.Threading.Tasks.Task<string> getLastNameAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortal/getEmail", ReplyAction="http://tempuri.org/IPortal/getEmailResponse")]
        string getEmail(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortal/getEmail", ReplyAction="http://tempuri.org/IPortal/getEmailResponse")]
        System.Threading.Tasks.Task<string> getEmailAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortal/getJoinDate", ReplyAction="http://tempuri.org/IPortal/getJoinDateResponse")]
        string getJoinDate(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortal/getJoinDate", ReplyAction="http://tempuri.org/IPortal/getJoinDateResponse")]
        System.Threading.Tasks.Task<string> getJoinDateAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortal/changePassword", ReplyAction="http://tempuri.org/IPortal/changePasswordResponse")]
        bool changePassword(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPortal/changePassword", ReplyAction="http://tempuri.org/IPortal/changePasswordResponse")]
        System.Threading.Tasks.Task<bool> changePasswordAsync(string userName, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPortalChannel : GdsHub.ServiceReferencePortal.IPortal, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PortalClient : System.ServiceModel.ClientBase<GdsHub.ServiceReferencePortal.IPortal>, GdsHub.ServiceReferencePortal.IPortal {
        
        public PortalClient() {
        }
        
        public PortalClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PortalClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PortalClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PortalClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool checkIfExistedUserName(string userName) {
            return base.Channel.checkIfExistedUserName(userName);
        }
        
        public System.Threading.Tasks.Task<bool> checkIfExistedUserNameAsync(string userName) {
            return base.Channel.checkIfExistedUserNameAsync(userName);
        }
        
        public bool addNewUser(string userName, string passWord, string firstName, string lastName, string email, string joinDate) {
            return base.Channel.addNewUser(userName, passWord, firstName, lastName, email, joinDate);
        }
        
        public System.Threading.Tasks.Task<bool> addNewUserAsync(string userName, string passWord, string firstName, string lastName, string email, string joinDate) {
            return base.Channel.addNewUserAsync(userName, passWord, firstName, lastName, email, joinDate);
        }
        
        public bool checkPassword(string userName, string passWord) {
            return base.Channel.checkPassword(userName, passWord);
        }
        
        public System.Threading.Tasks.Task<bool> checkPasswordAsync(string userName, string passWord) {
            return base.Channel.checkPasswordAsync(userName, passWord);
        }
        
        public long getUserId(string userName) {
            return base.Channel.getUserId(userName);
        }
        
        public System.Threading.Tasks.Task<long> getUserIdAsync(string userName) {
            return base.Channel.getUserIdAsync(userName);
        }
        
        public string getPassWord(string userName) {
            return base.Channel.getPassWord(userName);
        }
        
        public System.Threading.Tasks.Task<string> getPassWordAsync(string userName) {
            return base.Channel.getPassWordAsync(userName);
        }
        
        public string getFirstName(string userName) {
            return base.Channel.getFirstName(userName);
        }
        
        public System.Threading.Tasks.Task<string> getFirstNameAsync(string userName) {
            return base.Channel.getFirstNameAsync(userName);
        }
        
        public string getLastName(string userName) {
            return base.Channel.getLastName(userName);
        }
        
        public System.Threading.Tasks.Task<string> getLastNameAsync(string userName) {
            return base.Channel.getLastNameAsync(userName);
        }
        
        public string getEmail(string userName) {
            return base.Channel.getEmail(userName);
        }
        
        public System.Threading.Tasks.Task<string> getEmailAsync(string userName) {
            return base.Channel.getEmailAsync(userName);
        }
        
        public string getJoinDate(string userName) {
            return base.Channel.getJoinDate(userName);
        }
        
        public System.Threading.Tasks.Task<string> getJoinDateAsync(string userName) {
            return base.Channel.getJoinDateAsync(userName);
        }
        
        public bool changePassword(string userName, string password) {
            return base.Channel.changePassword(userName, password);
        }
        
        public System.Threading.Tasks.Task<bool> changePasswordAsync(string userName, string password) {
            return base.Channel.changePasswordAsync(userName, password);
        }
    }
}
