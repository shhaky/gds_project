//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BitCoin.ServiceReferenceHub {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceHub.IHub", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IHub {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHub/checkIsExistedUserName", ReplyAction="http://tempuri.org/IHub/checkIsExistedUserNameResponse")]
        bool checkIsExistedUserName(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHub/checkIsExistedUserName", ReplyAction="http://tempuri.org/IHub/checkIsExistedUserNameResponse")]
        System.Threading.Tasks.Task<bool> checkIsExistedUserNameAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHub/addNewUser", ReplyAction="http://tempuri.org/IHub/addNewUserResponse")]
        bool addNewUser(string userName, string passWord, string firstName, string lastName, string email, string joinDate, string lastLoginTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHub/addNewUser", ReplyAction="http://tempuri.org/IHub/addNewUserResponse")]
        System.Threading.Tasks.Task<bool> addNewUserAsync(string userName, string passWord, string firstName, string lastName, string email, string joinDate, string lastLoginTime);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHubChannel : BitCoin.ServiceReferenceHub.IHub, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HubClient : System.ServiceModel.ClientBase<BitCoin.ServiceReferenceHub.IHub>, BitCoin.ServiceReferenceHub.IHub {
        
        public HubClient() {
        }
        
        public HubClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HubClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HubClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HubClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool checkIsExistedUserName(string userName) {
            return base.Channel.checkIsExistedUserName(userName);
        }
        
        public System.Threading.Tasks.Task<bool> checkIsExistedUserNameAsync(string userName) {
            return base.Channel.checkIsExistedUserNameAsync(userName);
        }
        
        public bool addNewUser(string userName, string passWord, string firstName, string lastName, string email, string joinDate, string lastLoginTime) {
            return base.Channel.addNewUser(userName, passWord, firstName, lastName, email, joinDate, lastLoginTime);
        }
        
        public System.Threading.Tasks.Task<bool> addNewUserAsync(string userName, string passWord, string firstName, string lastName, string email, string joinDate, string lastLoginTime) {
            return base.Channel.addNewUserAsync(userName, passWord, firstName, lastName, email, joinDate, lastLoginTime);
        }
    }
}
