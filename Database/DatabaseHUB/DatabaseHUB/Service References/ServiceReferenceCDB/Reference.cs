//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DatabaseHUB.ServiceReferenceCDB {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceCDB.ICDB")]
    public interface ICDB {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDB/getLastestExistedUserId", ReplyAction="http://tempuri.org/ICDB/getLastestExistedUserIdResponse")]
        long getLastestExistedUserId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDB/getLastestExistedUserId", ReplyAction="http://tempuri.org/ICDB/getLastestExistedUserIdResponse")]
        System.Threading.Tasks.Task<long> getLastestExistedUserIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDB/registerAsUser", ReplyAction="http://tempuri.org/ICDB/registerAsUserResponse")]
        void registerAsUser(long usrId, string passWord, string eMail, string lastLoginTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDB/registerAsUser", ReplyAction="http://tempuri.org/ICDB/registerAsUserResponse")]
        System.Threading.Tasks.Task registerAsUserAsync(long usrId, string passWord, string eMail, string lastLoginTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDB/showPassWord", ReplyAction="http://tempuri.org/ICDB/showPassWordResponse")]
        string showPassWord(long userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDB/showPassWord", ReplyAction="http://tempuri.org/ICDB/showPassWordResponse")]
        System.Threading.Tasks.Task<string> showPassWordAsync(long userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDB/showEmail", ReplyAction="http://tempuri.org/ICDB/showEmailResponse")]
        string showEmail(long userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDB/showEmail", ReplyAction="http://tempuri.org/ICDB/showEmailResponse")]
        System.Threading.Tasks.Task<string> showEmailAsync(long userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDB/changePass", ReplyAction="http://tempuri.org/ICDB/changePassResponse")]
        bool changePass(long userId, string newPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDB/changePass", ReplyAction="http://tempuri.org/ICDB/changePassResponse")]
        System.Threading.Tasks.Task<bool> changePassAsync(long userId, string newPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDB/updateLoginTime", ReplyAction="http://tempuri.org/ICDB/updateLoginTimeResponse")]
        void updateLoginTime(long userId, string loginTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDB/updateLoginTime", ReplyAction="http://tempuri.org/ICDB/updateLoginTimeResponse")]
        System.Threading.Tasks.Task updateLoginTimeAsync(long userId, string loginTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDB/checkAddress", ReplyAction="http://tempuri.org/ICDB/checkAddressResponse")]
        bool checkAddress(long add);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICDB/checkAddress", ReplyAction="http://tempuri.org/ICDB/checkAddressResponse")]
        System.Threading.Tasks.Task<bool> checkAddressAsync(long add);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICDBChannel : DatabaseHUB.ServiceReferenceCDB.ICDB, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CDBClient : System.ServiceModel.ClientBase<DatabaseHUB.ServiceReferenceCDB.ICDB>, DatabaseHUB.ServiceReferenceCDB.ICDB {
        
        public CDBClient() {
        }
        
        public CDBClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CDBClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CDBClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CDBClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public long getLastestExistedUserId() {
            return base.Channel.getLastestExistedUserId();
        }
        
        public System.Threading.Tasks.Task<long> getLastestExistedUserIdAsync() {
            return base.Channel.getLastestExistedUserIdAsync();
        }
        
        public void registerAsUser(long usrId, string passWord, string eMail, string lastLoginTime) {
            base.Channel.registerAsUser(usrId, passWord, eMail, lastLoginTime);
        }
        
        public System.Threading.Tasks.Task registerAsUserAsync(long usrId, string passWord, string eMail, string lastLoginTime) {
            return base.Channel.registerAsUserAsync(usrId, passWord, eMail, lastLoginTime);
        }
        
        public string showPassWord(long userId) {
            return base.Channel.showPassWord(userId);
        }
        
        public System.Threading.Tasks.Task<string> showPassWordAsync(long userId) {
            return base.Channel.showPassWordAsync(userId);
        }
        
        public string showEmail(long userId) {
            return base.Channel.showEmail(userId);
        }
        
        public System.Threading.Tasks.Task<string> showEmailAsync(long userId) {
            return base.Channel.showEmailAsync(userId);
        }
        
        public bool changePass(long userId, string newPass) {
            return base.Channel.changePass(userId, newPass);
        }
        
        public System.Threading.Tasks.Task<bool> changePassAsync(long userId, string newPass) {
            return base.Channel.changePassAsync(userId, newPass);
        }
        
        public void updateLoginTime(long userId, string loginTime) {
            base.Channel.updateLoginTime(userId, loginTime);
        }
        
        public System.Threading.Tasks.Task updateLoginTimeAsync(long userId, string loginTime) {
            return base.Channel.updateLoginTimeAsync(userId, loginTime);
        }
        
        public bool checkAddress(long add) {
            return base.Channel.checkAddress(add);
        }
        
        public System.Threading.Tasks.Task<bool> checkAddressAsync(long add) {
            return base.Channel.checkAddressAsync(add);
        }
    }
}
