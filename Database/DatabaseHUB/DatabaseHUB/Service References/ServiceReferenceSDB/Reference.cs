//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DatabaseHUB.ServiceReferenceSDB {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceSDB.ISDB")]
    public interface ISDB {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDB/getLastestExistedUserId", ReplyAction="http://tempuri.org/ISDB/getLastestExistedUserIdResponse")]
        long getLastestExistedUserId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDB/getLastestExistedUserId", ReplyAction="http://tempuri.org/ISDB/getLastestExistedUserIdResponse")]
        System.Threading.Tasks.Task<long> getLastestExistedUserIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDB/showUserName", ReplyAction="http://tempuri.org/ISDB/showUserNameResponse")]
        string showUserName(long userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDB/showUserName", ReplyAction="http://tempuri.org/ISDB/showUserNameResponse")]
        System.Threading.Tasks.Task<string> showUserNameAsync(long userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDB/checkUserName", ReplyAction="http://tempuri.org/ISDB/checkUserNameResponse")]
        bool checkUserName(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDB/checkUserName", ReplyAction="http://tempuri.org/ISDB/checkUserNameResponse")]
        System.Threading.Tasks.Task<bool> checkUserNameAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDB/registerAsUser", ReplyAction="http://tempuri.org/ISDB/registerAsUserResponse")]
        void registerAsUser(long usrId, string userName, string firstName, string lastName, string joinDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDB/registerAsUser", ReplyAction="http://tempuri.org/ISDB/registerAsUserResponse")]
        System.Threading.Tasks.Task registerAsUserAsync(long usrId, string userName, string firstName, string lastName, string joinDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDB/showUserId", ReplyAction="http://tempuri.org/ISDB/showUserIdResponse")]
        long showUserId(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISDB/showUserId", ReplyAction="http://tempuri.org/ISDB/showUserIdResponse")]
        System.Threading.Tasks.Task<long> showUserIdAsync(string userName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISDBChannel : DatabaseHUB.ServiceReferenceSDB.ISDB, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SDBClient : System.ServiceModel.ClientBase<DatabaseHUB.ServiceReferenceSDB.ISDB>, DatabaseHUB.ServiceReferenceSDB.ISDB {
        
        public SDBClient() {
        }
        
        public SDBClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SDBClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SDBClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SDBClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public long getLastestExistedUserId() {
            return base.Channel.getLastestExistedUserId();
        }
        
        public System.Threading.Tasks.Task<long> getLastestExistedUserIdAsync() {
            return base.Channel.getLastestExistedUserIdAsync();
        }
        
        public string showUserName(long userId) {
            return base.Channel.showUserName(userId);
        }
        
        public System.Threading.Tasks.Task<string> showUserNameAsync(long userId) {
            return base.Channel.showUserNameAsync(userId);
        }
        
        public bool checkUserName(string userName) {
            return base.Channel.checkUserName(userName);
        }
        
        public System.Threading.Tasks.Task<bool> checkUserNameAsync(string userName) {
            return base.Channel.checkUserNameAsync(userName);
        }
        
        public void registerAsUser(long usrId, string userName, string firstName, string lastName, string joinDate) {
            base.Channel.registerAsUser(usrId, userName, firstName, lastName, joinDate);
        }
        
        public System.Threading.Tasks.Task registerAsUserAsync(long usrId, string userName, string firstName, string lastName, string joinDate) {
            return base.Channel.registerAsUserAsync(usrId, userName, firstName, lastName, joinDate);
        }
        
        public long showUserId(string userName) {
            return base.Channel.showUserId(userName);
        }
        
        public System.Threading.Tasks.Task<long> showUserIdAsync(string userName) {
            return base.Channel.showUserIdAsync(userName);
        }
    }
}
